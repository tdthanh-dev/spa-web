// filepath: src/config/constants.js

// Base API URL
export const API_BASE_URL = 'http://localhost:8081/api';

// API endpoints - clean & consistent with backend
export const API_ENDPOINTS = {
  AUTH: {
    LOGIN: `${API_BASE_URL}/auth/login`,
    REQUEST_OTP: `${API_BASE_URL}/auth/otp/request`,
    VERIFY_OTP: `${API_BASE_URL}/auth/otp/verify`,
    ME: `${API_BASE_URL}/auth/me`,
    REFRESH: `${API_BASE_URL}/auth/refresh`,
    LOGOUT: `${API_BASE_URL}/auth/logout`,
    CHANGE_PASSWORD: `${API_BASE_URL}/auth/change-password`,
  },

  LEADS: `${API_BASE_URL}/leads`,
  CUSTOMERS: `${API_BASE_URL}/customers`,
  SERVICES: `${API_BASE_URL}/services`,
  APPOINTMENTS: `${API_BASE_URL}/appointments`,
  CUSTOMER_CASES: `${API_BASE_URL}/customer-cases`,
  INVOICES: `${API_BASE_URL}/invoices`,
  PAYMENTS: `${API_BASE_URL}/payments`,
  TIERS: `${API_BASE_URL}/tiers`,
  ROLES: `${API_BASE_URL}/roles`,
  PERMISSIONS: `${API_BASE_URL}/permissions`,
  STAFF_FIELD_PERMISSIONS: `${API_BASE_URL}/staff-field-permissions`,
  STAFF_USERS: `${API_BASE_URL}/staff-users`,
  PHOTOS: `${API_BASE_URL}/photos`,
  AUDIT: `${API_BASE_URL}/audit`,
  DASHBOARD: `${API_BASE_URL}/dashboard`,
  ACCOUNTS: `${API_BASE_URL}/accounts`,

  DEBUG: {
    TOKEN: `${API_BASE_URL}/debug/token`,
  },
};

// Lead Status mappings (matching backend LeadStatus enum)
export const LEAD_STATUS_MAP = {
  NEW: { label: 'M·ªõi', className: 'status-new', icon: 'üÜï', description: 'Lead m·ªõi ƒë∆∞·ª£c t·∫°o' },
  IN_PROGRESS: { label: 'ƒêang t∆∞ v·∫•n', className: 'status-in-progress', icon: '‚è≥', description: 'ƒêang trong qu√° tr√¨nh t∆∞ v·∫•n' },
  WON: { label: 'Th√†nh c√¥ng', className: 'status-success', icon: '‚úÖ', description: 'ƒê√£ chuy·ªÉn ƒë·ªïi th√†nh kh√°ch h√†ng' },
  LOST: { label: 'Th·∫•t b·∫°i', className: 'status-cancelled', icon: '‚ùå', description: 'Kh√¥ng th·ªÉ chuy·ªÉn ƒë·ªïi' },
};

// Backward compatibility
export const STATUS_MAP = {
  NEW: { label: 'M·ªõi', className: 'status-new' },
  IN_PROGRESS: { label: 'ƒêang t∆∞ v·∫•n', className: 'status-in-progress' },
  WON: { label: 'Th√†nh c√¥ng', className: 'status-success' },
  LOST: { label: 'Th·∫•t b·∫°i', className: 'status-cancelled' },
  SUCCESS: { label: 'Th√†nh c√¥ng', className: 'status-success' },
  CANCELLED: { label: 'ƒê√£ h·ªßy', className: 'status-cancelled' },
};

// Customer type mappings (for source field)
export const CUSTOMER_TYPE_MAP = {
  Web: 'Web',
  Phone: 'ƒêi·ªán tho·∫°i',
  'Walk-in': 'Tr·ª±c ti·∫øp',
  Social: 'M·∫°ng x√£ h·ªôi',
};

// Customer type mappings (for customerType field)
export const CUSTOMER_TYPE_STATUS_MAP = {
  NEW: 'Kh√°ch m·ªõi',
  EXISTING: 'Kh√°ch c≈©',
  VIP: 'Kh√°ch VIP',
};

// Case Status mappings (matching backend CaseStatus enum)
export const CASE_STATUS_MAP = {
  INTAKE: { label: 'Ti·∫øp nh·∫≠n', className: 'status-intake' },
  IN_PROGRESS: { label: 'ƒêang ƒëi·ªÅu tr·ªã', className: 'status-in-progress' },
  COMPLETED: { label: 'Ho√†n th√†nh', className: 'status-completed' },
  ON_HOLD: { label: 'T·∫°m d·ª´ng', className: 'status-on-hold' },
  CANCELLED: { label: 'H·ªßy b·ªè', className: 'status-cancelled' },
};

// Service Category mappings
export const SERVICE_CATEGORY_MAP = {
  LIP: { label: 'Phun m√¥i', icon: 'üíã' },
  BROW: { label: 'Phun m√†y', icon: 'üëÄ' },
  OTHER: { label: 'Kh√°c', icon: '‚ú®' },
};

// Payment Method mappings
export const PAYMENT_METHOD_MAP = {
  CASH: { label: 'Ti·ªÅn m·∫∑t', icon: 'üíµ' },
  CARD: { label: 'Th·∫ª', icon: 'üí≥' },
  BANK: { label: 'Chuy·ªÉn kho·∫£n', icon: 'üè¶' },
  EWALLET: { label: 'V√≠ ƒëi·ªán t·ª≠', icon: 'üì±' },
};

// Invoice Status mappings
export const INVOICE_STATUS_MAP = {
  DRAFT: { label: 'Nh√°p', className: 'status-draft' },
  UNPAID: { label: 'Ch∆∞a thanh to√°n', className: 'status-unpaid' },
  PAID: { label: 'ƒê√£ thanh to√°n', className: 'status-paid' },
  OVERDUE: { label: 'Qu√° h·∫°n', className: 'status-overdue' },
  CANCELLED: { label: 'ƒê√£ h·ªßy', className: 'status-cancelled' },
};

// Appointment Status mappings
export const APPOINTMENT_STATUS_MAP = {
  SCHEDULED: { label: 'ƒê√£ ƒë·∫∑t', className: 'status-scheduled' },
  CONFIRMED: { label: 'ƒê√£ x√°c nh·∫≠n', className: 'status-confirmed' },
  NO_SHOW: { label: 'Kh√¥ng ƒë·∫øn', className: 'status-no-show' },
  DONE: { label: 'Ho√†n th√†nh', className: 'status-done' },
  CANCELLED: { label: 'ƒê√£ h·ªßy', className: 'status-cancelled' },
};

// Staff Status mappings
export const STAFF_STATUS_MAP = {
  ACTIVE: { label: 'Ho·∫°t ƒë·ªông', className: 'status-active' },
  INACTIVE: { label: 'Kh√¥ng ho·∫°t ƒë·ªông', className: 'status-inactive' },
  SUSPENDED: { label: 'T·∫°m d·ª´ng', className: 'status-suspended' },
};

// Task Status mappings
export const TASK_STATUS_MAP = {
  OPEN: { label: 'M·ªü', className: 'status-open' },
  DONE: { label: 'Ho√†n th√†nh', className: 'status-done' },
  CANCELLED: { label: 'ƒê√£ h·ªßy', className: 'status-cancelled' },
};

// Retouch Status mappings
export const RETOUCH_STATUS_MAP = {
  SCHEDULED: { label: 'ƒê√£ l√™n l·ªãch', className: 'status-scheduled' },
  COMPLETED: { label: 'ƒê√£ ho√†n th√†nh', className: 'status-completed' },
  CANCELLED: { label: 'ƒê√£ h·ªßy', className: 'status-cancelled' },
};

// Permission Level mappings
export const PERMISSION_LEVEL_MAP = {
  NO: { label: 'Kh√¥ng truy c·∫≠p', className: 'permission-no', color: 'bg-red-100 text-red-800' },
  VIEW: { label: 'Ch·ªâ xem', className: 'permission-view', color: 'bg-blue-100 text-blue-800' },
  EDIT: { label: 'Ch·ªânh s·ª≠a', className: 'permission-edit', color: 'bg-green-100 text-green-800' },
};

// Field Permission mappings
export const STAFF_FIELD_PERMISSIONS_MAP = {
  // Customer field permissions
  customerName: { label: 'T√™n kh√°ch h√†ng', category: 'customer', description: 'Quy·ªÅn truy c·∫≠p t√™n kh√°ch h√†ng' },
  customerPhone: { label: 'S·ªë ƒëi·ªán tho·∫°i', category: 'customer', description: 'Quy·ªÅn truy c·∫≠p s·ªë ƒëi·ªán tho·∫°i kh√°ch h√†ng' },
  customerEmail: { label: 'Email', category: 'customer', description: 'Quy·ªÅn truy c·∫≠p email kh√°ch h√†ng' },
  customerDob: { label: 'Ng√†y sinh', category: 'customer', description: 'Quy·ªÅn truy c·∫≠p ng√†y sinh kh√°ch h√†ng' },
  customerGender: { label: 'Gi·ªõi t√≠nh', category: 'customer', description: 'Quy·ªÅn truy c·∫≠p gi·ªõi t√≠nh kh√°ch h√†ng' },
  customerAddress: { label: 'ƒê·ªãa ch·ªâ', category: 'customer', description: 'Quy·ªÅn truy c·∫≠p ƒë·ªãa ch·ªâ kh√°ch h√†ng' },
  customerNotes: { label: 'Ghi ch√∫', category: 'customer', description: 'Quy·ªÅn truy c·∫≠p ghi ch√∫ kh√°ch h√†ng' },

  // Financial data permissions
  customerTotalSpent: { label: 'T·ªïng chi ti√™u', category: 'financial', description: 'Quy·ªÅn truy c·∫≠p t·ªïng chi ti√™u c·ªßa kh√°ch h√†ng' },
  customerTotalPoints: { label: 'ƒêi·ªÉm t√≠ch l≈©y', category: 'financial', description: 'Quy·ªÅn truy c·∫≠p ƒëi·ªÉm t√≠ch l≈©y kh√°ch h√†ng' },
  customerTier: { label: 'H·∫°ng kh√°ch h√†ng', category: 'financial', description: 'Quy·ªÅn truy c·∫≠p h·∫°ng kh√°ch h√†ng' },
  customerVipStatus: { label: 'Tr·∫°ng th√°i VIP', category: 'financial', description: 'Quy·ªÅn truy c·∫≠p tr·∫°ng th√°i VIP' },

  // Appointment permissions
  appointmentView: { label: 'Xem l·ªãch h·∫πn', category: 'appointment', description: 'Quy·ªÅn xem l·ªãch h·∫πn' },
  appointmentCreate: { label: 'T·∫°o l·ªãch h·∫πn', category: 'appointment', description: 'Quy·ªÅn t·∫°o l·ªãch h·∫πn m·ªõi' },
  appointmentUpdate: { label: 'C·∫≠p nh·∫≠t l·ªãch h·∫πn', category: 'appointment', description: 'Quy·ªÅn c·∫≠p nh·∫≠t l·ªãch h·∫πn' },
  appointmentCancel: { label: 'H·ªßy l·ªãch h·∫πn', category: 'appointment', description: 'Quy·ªÅn h·ªßy l·ªãch h·∫πn' },

  // Invoice permissions
  invoiceView: { label: 'Xem h√≥a ƒë∆°n', category: 'invoice', description: 'Quy·ªÅn xem h√≥a ƒë∆°n' },
  invoiceCreate: { label: 'T·∫°o h√≥a ƒë∆°n', category: 'invoice', description: 'Quy·ªÅn t·∫°o h√≥a ƒë∆°n m·ªõi' },
  invoiceUpdate: { label: 'C·∫≠p nh·∫≠t h√≥a ƒë∆°n', category: 'invoice', description: 'Quy·ªÅn c·∫≠p nh·∫≠t h√≥a ƒë∆°n' },

  // History permissions
  historyView: { label: 'Xem l·ªãch s·ª≠', category: 'history', description: 'Quy·ªÅn xem l·ªãch s·ª≠ kh√°ch h√†ng' },
  historyExport: { label: 'Xu·∫•t l·ªãch s·ª≠', category: 'history', description: 'Quy·ªÅn xu·∫•t d·ªØ li·ªáu l·ªãch s·ª≠' },
};

// Permission categories for grouping
export const PERMISSION_CATEGORIES = {
  customer: { label: 'Th√¥ng tin kh√°ch h√†ng', icon: 'üë§', color: 'blue' },
  financial: { label: 'D·ªØ li·ªáu t√†i ch√≠nh', icon: 'üí∞', color: 'green' },
  appointment: { label: 'Qu·∫£n l√Ω l·ªãch h·∫πn', icon: 'üìÖ', color: 'purple' },
  invoice: { label: 'H√≥a ƒë∆°n', icon: 'üßæ', color: 'yellow' },
  history: { label: 'L·ªãch s·ª≠', icon: 'üìú', color: 'gray' },
};

// Legacy Permission Scope mappings (kept for backward compatibility)
export const PERMISSION_SCOPE_MAP = {
  CUSTOMER_NAME: { label: 'T√™n kh√°ch h√†ng', category: 'customer' },
  CUSTOMER_PHONE: { label: 'S·ªë ƒëi·ªán tho·∫°i', category: 'customer' },
  CUSTOMER_EMAIL: { label: 'Email', category: 'customer' },
  CUSTOMER_ADDRESS: { label: 'ƒê·ªãa ch·ªâ', category: 'customer' },
  CUSTOMER_DOB: { label: 'Ng√†y sinh', category: 'customer' },
  CUSTOMER_NOTES: { label: 'Ghi ch√∫', category: 'customer' },
  CUSTOMER_FINANCIAL: { label: 'Th√¥ng tin t√†i ch√≠nh', category: 'customer' },
  APPOINTMENT_MANAGE: { label: 'Qu·∫£n l√Ω l·ªãch h·∫πn', category: 'appointment' },
  INVOICE_MANAGE: { label: 'Qu·∫£n l√Ω h√≥a ƒë∆°n', category: 'invoice' },
  CASE_MANAGE: { label: 'Qu·∫£n l√Ω case', category: 'case' },
  PHOTO_MANAGE: { label: 'Qu·∫£n l√Ω h√¨nh ·∫£nh', category: 'photo' },
};

// App configuration
export const APP_CONFIG = {
  name: 'Spa Management',
  version: '1.0.0',
  logo: '/vite.svg',
  pagination: {
    defaultPageSize: 20,
    defaultPage: 0,
  },
};
